<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="development-environment">
    <title>Development Environment</title>
    <para>
        To facilitate the writing of OTRS expansion modules, the creation of a development environment is necessary.
        The source code of OTRS and additional public modules can be found on <ulink url="https://github.com/OTRS/">GitHub</ulink>.
    </para>

    <section id="environment-cvs-checkout">
        <title>Framework checkout</title>
        <para>
            First of all a directory must be created in which the modules can be stored.
            Then switch to the new directory using the command line and check them out by using the following command:
        </para>
        <para>
            <screen><![CDATA[
# for git master
shell> git clone git@github.com:OTRS/otrs.git -b master
# for a specific branch like OTRS 3.3
shell> git clone git@github.com:OTRS/otrs.git -b rel-3_3
            ]]></screen>
        </para>
        <para>
            Check out the <literal>module-tools</literal> module (from github) too, for your development environment. It contains a number of useful tools:
        </para>
        <para>
            <screen><![CDATA[
shell> git clone git@github.com:OTRS/module-tools.git
            ]]></screen>
        </para>
        <para>
            Please configure the OTRS system according to the
            <ulink url="https://doc.otrs.com/doc/manual/admin/6.0/en/html/installation.html">installation instructions</ulink>
            in the admin manual.
        </para>
    </section>

    <section id="useful-tools">
        <title>Useful Tools</title>
        <para>
            There are two modules that are highly recommended for OTRS development:
            <ulink url="https://github.com/OTRS/otrscodepolicy">OTRSCodePolicy</ulink> and
            <ulink url="https://github.com/OTRS/Fred">Fred</ulink>.
        </para>
        <para>
            OTRSCodePolicy is a code quality checker that enforces the use of common coding standards
            also for the OTRS development team. It is highly recommended to use it if you plan to make
            contributions. You can use it as a standalone test script or even register it as a git commit
            hook that runs every time that you create a commit. Please see
            <ulink url="https://github.com/OTRS/otrscodepolicy/blob/master/doc/en/OTRSCodePolicy.xml">
                the module documentation
            </ulink> for details.
        </para>
        <para>
            Fred is a little development helper module that you can actually install or link (as described below)
            into your development system. It features several helpful modules that you can activate, such as an
            SQL logger or an STDERR console. You can find some more details in its
            <ulink url="https://github.com/OTRS/Fred/blob/master/doc/en/Fred.xml">module documentation</ulink>.
        </para>
        <para>
            By the way, these tools are also open source, and we will be happy about any improvements that you
            can contribute.
        </para>
    </section>

    <section id="environment-link-modules">
        <title>Linking Expansion Modules</title>
        <para>
            A clear separation between OTRS and the modules is necessary for proper developing.
            Particularly when using a git clone, a clear separation is crucial.
            In order to facilitate the OTRS access the files, links must be created.
            This is done by a script in the directory module tools repository.
            Example: Linking the Calendar Module:
        </para>
        <para>
            <screen><![CDATA[
shell> ~/src/module-tools/link.pl ~/src/Calendar/ ~/src/otrs/
            ]]></screen>
        </para>
        <para>
            Whenever new files are added, they must be linked as described above.
        </para>
        <para>
            As soon as the linking is completed, the SysConfig must be rebuilt to register the module in OTRS.
            Additional SQL or Perl code from the module must also be executed.
            Example:
        </para>
        <para>
            <screen><![CDATA[
shell> ~/src/otrs/bin/otrs.Console.pl Maint::Config::Rebuild
shell> ~/src/module-tools/DatabaseInstall.pl -m Calendar.sopm -a install
shell> ~/src/module-tools/CodeInstall.pl -m Calendar.sopm -a install
            ]]></screen>
        </para>
        <para>
            To remove links from OTRS enter the following command:
        </para>
        <para>
            <screen><![CDATA[
shell> ~/src/module-tools/remove_links.pl ~/src/otrs/
            ]]></screen>
        </para>
    </section>
</section>
