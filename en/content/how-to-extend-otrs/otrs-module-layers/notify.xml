<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<section id="notify-module">
    <title>Notification Module</title>
    <para>
        Notification modules are used to display a notification below the
        main navigation. You can write and register your own notification
        module.
        There are currently 5 ticket menues in the OTRS framework.
    </para>
    <para>
        <itemizedlist mark="round">
            <listitem>
                <para>AgentOnline</para>
            </listitem>
            <listitem>
                <para>AgentTicketEscalation</para>
            </listitem>
            <listitem>
                <para>CharsetCheck</para>
            </listitem>
            <listitem>
                <para>CustomerOnline</para>
            </listitem>
            <listitem>
                <para>UIDCheck</para>
            </listitem>
        </itemizedlist>
    </para>
    <section id="notify-module-code">
        <title>Code Example</title>
        <para>
            The notification modules are located under
            Kernel/Output/HTML/TicketNotification*.pm.
            There is an example of a notify module below.
            Save it under Kernel/Output/HTML/TicketNotificationCustom.pm.
            You just need 2 functions: new() and Run().
        </para>
        <para>
        <programlisting linenumbering="numbered"><![CDATA[
# --
# Kernel/Output/HTML/NotificationCustom.pm
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

package Kernel::Output::HTML::NotificationCustom;

use strict;
use warnings;

use Kernel::System::Custom;

sub new {
    my ( $Type, %Param ) = @_;

    # allocate new hash for object
    my $Self = {};
    bless( $Self, $Type );

    # get needed objects
    for my $Object (qw(ConfigObject LogObject DBObject LayoutObject TimeObject UserID)) {
        $Self->{$Object} = $Param{$Object} || die "Got no $Object!";
    }
    $Self->{CustomObject} = Kernel::System::Custom->new(%Param);
    return $Self;
}

sub Run {
    my ( $Self, %Param ) = @_;

    # get session info
    my %CustomParam      = ();
    my @Customs    = $Self->{CustomObject}->GetAllCustomIDs();
    my $IdleMinutes = $Param{Config}->{IdleMinutes} || 60 * 2;
    for (@Customs) {
        my %Data = $Self->{CustomObject}->GetCustomIDData( CustomID => $_, );
        if (
            $Self->{UserID} ne $Data{UserID}
            && $Data{UserType} eq 'User'
            && $Data{UserLastRequest}
            && $Data{UserLastRequest} + ( $IdleMinutes * 60 ) > $Self->{TimeObject}->SystemTime()
            && $Data{UserFirstname}
            && $Data{UserLastname}
            )
        {
            $CustomParam{ $Data{UserID} } = "$Data{UserFirstname} $Data{UserLastname}";
            if ( $Param{Config}->{ShowEmail} ) {
                $CustomParam{ $Data{UserID} } .= " ($Data{UserEmail})";
            }
        }
    }
    for ( sort { $CustomParam{$a} cmp $CustomParam{$b} } keys %CustomParam ) {
        if ( $Param{Message} ) {
            $Param{Message} .= ', ';
        }
        $Param{Message} .= "$CustomParam{$_}";
    }
    if ( $Param{Message} ) {
        return $Self->{LayoutObject}->Notify( Info => 'Custom Message: %s", "' . $Param{Message} );
    }
    else {
        return '';
    }
}

1;

        ]]></programlisting>
        </para>
    </section>
    <section id="notify-module-configuration">
        <title>Configuration Example</title>
        <para>
            There is the need to activate your custom notification module.
            This can be done using the xml configuration below. There may
            be additional parameters in the config hash for your notification
            module.
        </para>
        <para>
        <programlisting linenumbering="numbered"><![CDATA[
<ConfigItem Name="Frontend::NotifyModule###3-Custom" Required="0" Valid="0">
    <Description Lang="en">Module to show custom message in the agent interface.</Description>
    <Description Lang="de">Mit diesem Modul k√∂nnen eigene Meldungenen innerhalb des Agent-Interfaces angezeigt werden.</Description>
    <Group>Framework</Group>
    <SubGroup>Frontend::Agent::ModuleNotify</SubGroup>
    <Setting>
        <Hash>
            <Item Key="Module">Kernel::Output::HTML::NotificationCustom</Item>
            <Item Key="Key1">1</Item>
            <Item Key="Key2">2</Item>
        </Hash>
    </Setting>
</ConfigItem>
        ]]></programlisting>
        </para>
    </section>
    <section id="notify-module-use_cases">
        <title>Use Case Example</title>
        <para>
            Useful ticket menu implementation could be a link to a external
            tool if parameters (e.g. FreeTextField) have been set.
        </para>
    </section>
    <section id="notify-module-releases">
        <title>Release Availability</title>
        <para>
        <informaltable>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Name</entry>
                        <entry>Release</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>NotificationAgentOnline</entry>
                        <entry>2.0</entry>
                    </row>
                    <row>
                        <entry>NotificationAgentTicketEscalation</entry>
                        <entry>2.0</entry>
                    </row>
                    <row>
                        <entry>NotificationCharsetCheck</entry>
                        <entry>1.2</entry>
                    </row>
                    <row>
                        <entry>NotificationCustomerOnline</entry>
                        <entry>2.0</entry>
                    </row>
                    <row>
                        <entry>NotificationUIDCheck</entry>
                        <entry>1.2</entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
        </para>
    </section>
</section>
