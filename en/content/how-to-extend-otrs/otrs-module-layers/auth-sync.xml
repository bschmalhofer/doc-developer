<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<section id="auth-sync-module">
    <title>Authentication Synchronisation Module</title>
    <para>
        There is a LDAP authentication synchronisation module
        which come with the OTRS framework. It is also possible to develop your own
        authentication modules. The authentication synchronisation modules are located under
        Kernel/System/Auth/Sync/*.pm. For more information about their configuration see the admin manual.
        Following, there is an example of an authentication synchronisation module.
        Save it under Kernel/System/Auth/Sync/CustomAuthSync.pm.
        You just need 2 functions: new() and Sync(). Return 1, then the
        synchronisation is ok.
    </para>
    <section id="auth-sync-module-code">
        <title>Code Example</title>
        <para>
            The interface class is called Kernel::System::Auth. The example agent authentication
            may be called Kernel::System::Auth::Sync::CustomAuthSync. You can find an example below.
        </para>
        <para>
        <programlisting linenumbering="numbered"><![CDATA[
# --
# Kernel/System/Auth/Sync/CustomAuthSync.pm - provides the CustomAuthSync
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# --
# Id: CustomAuthSync.pm,v 1.9 2010/03/25 14:42:45 martin Exp $
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

package Kernel::System::Auth::Sync::CustomAuthSync;

use strict;
use warnings;
use Net::LDAP;

sub new {
    my ( $Type, %Param ) = @_;

    # allocate new hash for object
    my $Self = {};
    bless( $Self, $Type );

    # check needed objects
    for (qw(LogObject ConfigObject DBObject UserObject GroupObject EncodeObject)) {
        $Self->{$_} = $Param{$_} || die "No $_!";
    }

    # Debug 0=off 1=on
    $Self->{Debug} = 0;

...

    return $Self;
}

sub Sync {
    my ( $Self, %Param ) = @_;

    # check needed stuff
    for (qw(User)) {
        if ( !$Param{$_} ) {
            $Self->{LogObject}->Log( Priority => 'error', Message => "Need $_!" );
            return;
        }
    }
...
    return 1;
}

        ]]></programlisting>
        </para>
    </section>
    <section id="auth-sync-module-configuration">
        <title>Configuration Example</title>
        <para>
            You should activate your custom synchronisation module.
            This can be done using the perl configuration below.
            It is not recommended to use the xml configuration because this
            would allow you to lock yourself out via SysConfig.
        </para>
        <para>
        <programlisting linenumbering="numbered" ><![CDATA[
            $Self->{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';
        ]]></programlisting>
        </para>
    </section>
    <section id="auth-sync-module-use_cases">
        <title>Use Case Examples</title>
        <para>
            Useful synchronisation implementation could be a soap or radius backend.
        </para>
    </section>
    <section id="auth-sync-module-releases">
        <title>Release Availability</title>
        <para>
        <informaltable>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Name</entry>
                        <entry>Release</entry>
                    </row>
                </thead>
            <tbody>
                    <row>
                        <entry>LDAP</entry>
                        <entry>2.4</entry>
                    </row>
            </tbody>
            </tgroup>
        </informaltable>
        </para>
    </section>
    <section id="auth-sync-module-caveats">
        <title>Caveats and Warnings</title>
        <para>
        Please note that the synchronisation was part of the authentication class Kernel::System::Auth before framework 2.4.
        </para>
    </section>
</section>
