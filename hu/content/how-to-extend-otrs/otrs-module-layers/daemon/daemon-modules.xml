<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="daemon-overview">
    <title>OTRS démon</title>
    <para>
        Az OTRS démon egy elkülönített folyamat, amely segít az OTRS-nek bizonyos
műveleteket aszinkron módon és a webszolgáltatás folyamattól leválasztva
végrehajtani, de ugyanazt az adatbázist megosztva.
    </para>
    <section id="daemon-modules">
        <title>OTRS démonmodulok</title>
        <para>
            A <filename>bin/otrs.Daemon.pl</filename> OTRS démon fő célja, hogy meghívja
(démonizálja) a rendszerbeállításokban lévő összes regisztrált démonmodult.
        </para>
        <para>
            Minden egyes démonmodulnak meg kell valósítania egy közös API-t annak
érdekében, hogy az OTRS démon helyesen tudja meghívni, és félig állandó
folyamat legyen a rendszeren. Az állandó folyamat megnövelheti a méretét és
memóriahasználatát az idő múlásával, és normális esetben nem válaszolnak a
beállításokban lévő változásokra. Ezért kell a démonmoduloknak
megvalósítaniuk egy eldobási mechanizmust, hogy leállíthatók és újra
meghívhatók legyenek időről időre, felszabadítva a rendszer erőforrásait és
újraolvasva a beállításokat.
        </para>
        <para>
            Egy démonmodul lehet mindenre jó megoldás bizonyos feladat végrehajtásánál,
de lehet olyan eset is, amikor egy megoldás különböző démonmodulokat igényel
az összetettsége miatt. Pontosan ez az eset az OTRS ütemező démonjával,
amely fel van osztva számos démonmodulra, beleértve a feladatkezeléshez és a
feladatvégrehajtáshoz szükséges néhány démonmodult.
        </para>
        <para>
            Nem szükséges mindig új démonmodult létrehozni bizonyos feladatok
végrehajtásához. Általában az OTRS ütemező démon elboldogul ezek jelentős
részével – akár ha egy olyan OTRS függvényről van szó, amelyet rendszeresen
végre kell hajtani (CRON-szerűen), vagy ha egy OTRS esemény aktiválta azt –
az OTRS ütemezőnek képesnek kell lenni kezelnie mindenféle beállítás nélkül,
vagy egy új ütemező feladatelvégző modul hozzáadásával.
        </para>
        <section id="creating-new-daemon-module">
            <title>Új démonmodul létrehozása</title>
            <para>
                Az összes démonmodulnak regisztrálva kell lennie a rendszerbeállításokban
azért, hogy a fő OTRS démon meg tudja hívni azokat.
            </para>
            <section id="daemon-module-registration-code-example">
                <title>Démonmodul regisztrációs kódpélda</title>
                <para>
                    <programlisting><![CDATA[
<Setting Name="DaemonModules###TestDaemon" Required="1" Valid="1">
    <Description Translatable="1">The daemon registration for the scheduler generic agent task manager.</Description>
    <Navigation>Daemon::ModuleRegistration</Navigation>
    <Value>
        <Hash>
            <Item Key="Module">Kernel::System::Daemon::DaemonModules::TestDaemon</Item>
        </Hash>
    </Value>
</Setting>
                    ]]></programlisting>
                </para>
            </section>
            <section id="demon-module-code-example">
                <title>Démonmodul kódpélda</title>
                <para>
                    A következő kód egy olyan démonmodult valósít meg, amely megjeleníti a
rendszeridőt 2 másodpercenként.
                </para>
                <para>
                    <programlisting><![CDATA[
# --
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

package Kernel::System::Daemon::DaemonModules::TestDaemon;

use strict;
use warnings;
use utf8;

use Kernel::System::VariableCheck qw(:all);

use parent qw(Kernel::System::Daemon::BaseDaemon);

our @ObjectDependencies = (
    'Kernel::Config',
    'Kernel::System::Cache',
    'Kernel::System::DB',
);
                    ]]></programlisting>
                </para>
                <para>
                    Ez egy gyakori fejléc, amely megtalálható a legtöbb OTRS modulban. Az
osztály/csomag neve a <literal>package</literal> kulcsszón keresztül van
deklarálva.
                </para>
                <para>
                    Ebben az esetben a <literal>BaseDaemon</literal> osztályból származtatunk
le, és az objektumkezelő függőségei be vannak állítva.
                </para>
                <para>
                    <programlisting><![CDATA[
sub new {
    my ( $Type, %Param ) = @_;

    # Új kivonat lefoglalása az objektumhoz.
    my $Self = {};
    bless $Self, $Type;

    # Objektumok lekérése a konstruktorban a teljesítmény megtartásáért.
    $Self->{ConfigObject} = $Kernel::OM->Get('Kernel::Config');
    $Self->{CacheObject}  = $Kernel::OM->Get('Kernel::System::Cache');
    $Self->{DBObject}     = $Kernel::OM->Get('Kernel::System::DB');

    # Letiltás a memóriagyorsítótárban, hogy fürtözhető legyen.
    $Self->{CacheObject}->Configure(
        CacheInMemory  => 0,
        CacheInBackend => 1,
    );

    $Self->{SleepPost} = 2;          # 2 másodperc alvás minden hurok után
    $Self->{Discard}   = 60 * 60;    # eldobás minden órában

    $Self->{DiscardCount} = $Self->{Discard} / $Self->{SleepPost};

    $Self->{Debug}      = $Param{Debug};
    $Self->{DaemonName} = 'Daemon: TestDaemon';

    return $Self;
}
                    ]]></programlisting>
                </para>
                <para>
                    A <literal>new</literal> konstruktor hozza létre az osztály új
példányát. Néhány felhasznált objektum is itt lesz létrehozva. Erősen
ajánlott a memóriába történő gyorsítótárazás letiltása a démonmodulokban,
különösen akkor, ha az OTRS fürtözött környezetben fut.
                </para>
                <para>
                    Azért, hogy ez a démonmodul minden második másodpercben végrehajtható
legyen, egy alvási idő meghatározása szükséges annak megfelelően, egyébként
azonnal végrehajtásra kerül, amint lehetséges.
                </para>
                <para>
                    A démonmodul frissítése időről időre azért szükséges, hogy meghatározható
legyen, mikor kell eldobni.
                </para>
                <para>
                    A következő függvényeknél (<literal>PreRun</literal>, <literal>Run</literal>
és <literal>PostRun</literal>) ha azok hamis értékkel térnek vissza, akkor a
fő OTRS démon el fogja dobni az objektumot, és egy újat hoz létre, amint
lehetséges.
                </para>
                <para>
                    <programlisting><![CDATA[
sub PreRun {
    my ( $Self, %Param ) = @_;

    # Annak ellenőrzése, hogy az adatbázis elérhető-e.
    return 1 if $Self->{DBObject}->Ping();

    sleep 10;

    return;
}
                    ]]></programlisting>
                </para>
                <para>
                    A <literal>PreRun</literal> metódus a fő démonmodul metódusa előtt kerül
végrehajtásra, és a célja néhány teszt elvégzése a valódi műfelet
előtt. Ebben az esetben az adatbázis ellenőrzése készen van (mindig
javasolt), egyébként 10 másodpercet alszik. Ez azért szükséges, hogy
megvárja az adatbázis-kapcsolat ismételt felépítését.
                </para>
                <para>
                    <programlisting><![CDATA[
sub Run {
    my ( $Self, %Param ) = @_;

    print "Jelenlegi idő: " . localtime . "\n";

    return 1;
}
                    ]]></programlisting>
                </para>
                <para>
                    A <literal>Run</literal> metódus az, ahol a fő démonmodul kódja
található. Ebben az esetben csak az aktuális időt írja ki.
                </para>
                <para>
                    <programlisting><![CDATA[
sub PostRun {
    my ( $Self, %Param ) = @_;
    sleep $Self->{SleepPost};
    $Self->{DiscardCount}--;

    if ( $Self->{Debug} ) {
        print "  $Self->{DaemonName} eldobásainak száma: $Self->{DiscardCount}\n";
    }

    return if $Self->{DiscardCount} <= 0;

    return 1;
}
                    ]]></programlisting>
                </para>
                <para>
                    A <literal>PostRun</literal> metódus használható az alvások végrehajtásához
(annak megakadályozásához, hogy a démonmodul túl gyakran legyen
végrehajtva), valamint az objektum biztonságos eldobásának kezeléséhez
is. Egyéb műveletek is elvégezhetők itt, mint például ellenőrzés vagy
tisztítás.
                </para>
                <para>
                    <programlisting><![CDATA[
sub Summary {
    my ( $Self, %Param ) = @_;

    my %Summary = (
        Header => 'Tesztdémon összegzés:',
        Column => [
            {
                Name        => 'SomeColumn',
                DisplayName => 'Valamilyen oszlop',
                Size        => 15,
            },
            {
                Name        => 'AnotherColumn',
                DisplayName => 'Egy másik oszlop',
                Size        => 15,
            },
            # ...
        ],
        Data => [
            {
                SomeColumn    => '1. valamilyen adat',
                AnotherColumn => '1. másik adat',
            },
            {
                SomeColumn    => '2. valamilyen adat',
                AnotherColumn => '2. másik adat',
            },
            # ...
        ],
        NoDataMesssage => '',
    );

    return \%Summary;
}
                    ]]></programlisting>
                </para>
                <para>
                    A <literal>Summary</literal> metódust a
<literal>Maint::Daemon::Summary</literal> konzolparancs hívja meg, és
<literal>Header</literal>, <literal>Column</literal>,
<literal>Data</literal> és <literal>NoDataMessages</literal> kulcsokat kell
visszaadnia. A <literal>Column</literal> és a <literal>Data</literal>
kulcsoknak tömböknek vagy kivonatoknak kell lenniük. Arra használható, hogy
hasznos információkat jelenítsen meg arról, amit a démonmodul éppen csinál,
vagy ami eddig történt. Ez a metódus elhagyható.
                </para>
                <para>
                    <programlisting><![CDATA[
1;
                    ]]></programlisting>
                </para>
                <para>
                    Fájl vége.
                </para>
            </section>
        </section>
    </section>
</section>
