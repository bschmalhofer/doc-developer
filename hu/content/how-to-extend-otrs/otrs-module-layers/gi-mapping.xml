<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="mapping">
    <title>Leképezés</title>
    <para>
        A leképezést adatok átalakításához használják az OTRS és a távoli rendszer
között, illetve fordítva. Ezek az adatok kulcs =&gt; érték párokként vannak
ábrázolva. Leképező modulok fejleszthetők ki nem csak az értékek, hanem a
kulcsok átalakításához is.
    </para>
    <para>
        <emphasis>Például:</emphasis>
    </para>
   <informaltable>
        <tgroup cols="2">
            <thead>
                <row>
                    <entry>Erről</entry>
                    <entry>Erre</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>Prio =&gt; Warning</entry>
                    <entry>PriorityID =&gt; 3</entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <para>
        A leképező réteg nem feltétlenül szükséges, egy webszolgáltatás teljesen
kihagyhatja azt a webszolgáltatás beállításaitól, valamint a meghívók és
műveletek megvalósításának módjától függően. De ha egy kis átalakítás
szükséges, akkor erősen ajánlott egy meglévő leképezőmodul használata, vagy
egy új létrehozása.
    </para>
    <para>
        A leképező modulok egynél több alkalommal is meghívhatók egy normál
kommunikáció közben. Vessen egy pillantást a következő példákra.
    </para>
    <para>
        <emphasis>OTRS mint szolgáltató példa:</emphasis>
    </para>
    <para>
        <orderedlist>
            <listitem>
                <para>
                    A távoli rendszer elküldi a kérést az adatokkal a távoli rendszer
formátumában
                </para>
            </listitem>
            <listitem>
                <para>
                    Az adatok leképezésre kerülnek a távoli rendszer formátumáról az OTRS
formátumára
                </para>
            </listitem>
            <listitem>
                <para>
                    Az OTRS végrehajtja a műveletet, és visszaadja a választ az OTRS
formátumában
                </para>
            </listitem>
            <listitem>
                <para>
                    Az adatok leképezésre kerülnek az OTRS formátumáról a távoli rendszer
formátumára
                </para>
            </listitem>
            <listitem>
                <para>
                    A válasz a távoli rendszer formátumában lévő adatokkal elküldésre kerül a
távoli rendszernek
                </para>
            </listitem>
        </orderedlist>
    </para>
    <para>
        <emphasis>OTRS mint kérelmező példa:</emphasis>
    </para>
    <para>
        <orderedlist>
            <listitem>
                <para>
                    Az OTRS előkészíti a kérést a távoli rendszerhez az OTRS formátumában lévő
adatokkal
                </para>
            </listitem>
            <listitem>
                <para>
                    Az adatok leképezésre kerülnek az OTRS formátumáról a távoli rendszer
formátumára
                </para>
            </listitem>
            <listitem>
                <para>
                    A kérés elküldésre kerül a távoli rendszernek, amely végrehajtja a
műveletet, és visszaküldi a választ az OTRS-nek a távoli rendszer
formátumában lévő adatokkal
                </para>
            </listitem>
            <listitem>
                <para>
                    Az adatok (ismét) leképezésre kerülnek a távoli rendszer formátumáról az
OTRS formátumára
                </para>
            </listitem>
            <listitem>
                <para>
                    Az OTRS feldolgozza a választ
                </para>
            </listitem>
        </orderedlist>
    </para>
    <section id="adding_mapping">
        <title>Leképező háttérprogram</title>
        <para>
            Az általános felület biztosít egy <emphasis>Simple</emphasis> nevű
leképezőmodult. Ezzel a modullal a legtöbb adatátalakítás (beleértve a kulcs
és érték leképezést) elvégezhető, és szabályokat is meghatároz az
alapértelmezett leképezések kezeléséhez mind a kulcsoknál, mind az
értékeknél.
        </para>
        <para>
            Ezért erősen valószínű, hogy nem lesz szüksége egy egyéni leképezőmodul
kifejlesztésére. A folytatás előtt nézze meg a <emphasis>Simple</emphasis>
leképezőmodult
(<filename>Kernel/GenericInterface/Mapping/Simple.pm</filename>) és annak
internetes dokumentációját.
        </para>
        <para>
            Ha a <emphasis>Simple</emphasis> leképezőmodul nem felel meg az igényeinek,
akkor meg fogjuk mutatni, hogy hogyan lehet kifejleszteni egy új leképező
háttérprogramot. Minden egyes leképező háttérprogramnak meg kell valósítania
ezeket a szubrutinokat:
        </para>
        <para>
            <itemizedlist mark="round">
                <listitem>
                    <para><literal>new</literal></para>
                </listitem>
                <listitem>
                    <para><literal>Map</literal></para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Meg kell valósítanunk ezen metódusok mindegyikét azért, hogy képesek legyünk
az adatok leképezésére a kommunikációban, amelyet vagy a kérelmező, vagy a
szolgáltató kezel. Az összes leképező háttérprogramot a leképezőmodul kezeli
(<filename>Kernel/GenericInterface/Mapping.pm</filename>).
        </para>
        <section id="mapping_code_example">
            <title>Kódpélda</title>
            <para>
                Ebben a szakaszban egy minta leképezőmodul lesz megjelenítve, és minden
szubrutin elmagyarázásra kerül.
            </para>
            <para>
                <programlisting><![CDATA[
# --
# Kernel/GenericInterface/Mapping/Test.pm - GenericInterface test data mapping backend
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

package Kernel::GenericInterface::Mapping::Test;

use strict;
use warnings;

use Kernel::System::VariableCheck qw(IsHashRefWithData IsStringWithData);

our $ObjectManagerDisabled = 1;
                ]]></programlisting>
            </para>
            <para>
                Ez egy gyakori fejléc, amely megtalálható a szokásos OTRS modulokban. Az
osztály/csomag neve a <literal>package</literal> kulcsszón keresztül van
deklarálva.
            </para>
            <para>
                Felveszünk egy <literal>VariableCheck</literal> modult is bizonyos
ellenőrzések végrehajtásához néhány változón. A leképezések nem
példányosíthatók az objektumkezelővel.
            </para>
            <para>
                <programlisting><![CDATA[
sub new {
    my ( $Type, %Param ) = @_;

    # új kivonat lefoglalása az objektumhoz
    my $Self = {};
    bless( $Self, $Type );

    # a szükséges paraméterek ellenőrzése
    for my $Needed (qw(DebuggerObject MappingConfig)) {
        if ( !$Param{$Needed} ) {

            return {
                Success      => 0,
                ErrorMessage => "Nincs $Needed!"
            };
        }
        $Self->{$Needed} = $Param{$Needed};
    }

    # leképezési beállítás ellenőrzése
    if ( !IsHashRefWithData( $Param{MappingConfig} ) ) {

        return $Self->{DebuggerObject}->Error(
            Summary => 'Nincs MappingConfig objektum kivonathivatkozásként tartalommal!',
        );
    }

    # beállítás ellenőrzése - ha van leképezési beállításunk, akkor annak
    # nem üres kivonathivatkozásnak kell lennie
    if (
        defined $Param{MappingConfig}->{Config}
        && !IsHashRefWithData( $Param{MappingConfig}->{Config} )
        )
    {

        return $Self->{DebuggerObject}->Error(
            Summary => 'Van MappingConfig adatokkal, de az adat nem kivonathivatkozás tartalommal!',
        );
    }

    return $Self;
}
                ]]></programlisting>
            </para>
            <para>
                A <literal>new</literal> konstruktor hozza létre az osztály új példányát. A
kódolási irányelvek szerint az objektumkezelő által nem kezelt más
osztályoknak csak azon objektumait kell a <literal>new</literal>
konstruktorban létrehozni, amelyek ebben a modulban szükségesek.
            </para>
            <para>
                <programlisting><![CDATA[
sub Map {
    my ( $Self, %Param ) = @_;

    # adatok ellenőrzése - csak meghatározatlant vagy kivonathivatkozást fogad el
    if ( defined $Param{Data} && ref $Param{Data} ne 'HASH' ) {

        return $Self->{DebuggerObject}->Error(
            Summary => 'Van adat, de az nem kivonathivatkozás a leképezésteszt háttérprogramban!'
        );
    }

    # visszatérés, ha az adat üres
    if ( !defined $Param{Data} || !%{ $Param{Data} } ) {

        return {
            Success => 1,
            Data    => {},
        };
    }

    # ha nincs beállítás, akkor az azt jelenti, hogy egyszerűen visszaadjuk a bemeneti adatot
    if (
        !defined $Self->{MappingConfig}->{Config}
        || !defined $Self->{MappingConfig}->{Config}->{TestOption}
        )
    {

        return {
            Success => 1,
            Data    => $Param{Data},
        };
    }

    # a TestOption formátum ellenőrzése
    if ( !IsStringWithData( $Self->{MappingConfig}->{Config}->{TestOption} ) ) {

        return $Self->{DebuggerObject}->Error(
            Summary => 'Nincs TestOption szövegként értékkel!',
        );
    }

    # adatok feldolgozása a beállítások szerint
    my $ReturnData = {};
    if ( $Self->{MappingConfig}->{Config}->{TestOption} eq 'ToUpper' ) {
        $ReturnData = $Self->_ToUpper( Data => $Param{Data} );
    }
    elsif ( $Self->{MappingConfig}->{Config}->{TestOption} eq 'ToLower' ) {
        $ReturnData = $Self->_ToLower( Data => $Param{Data} );
    }
    elsif ( $Self->{MappingConfig}->{Config}->{TestOption} eq 'Empty' ) {
        $ReturnData = $Self->_Empty( Data => $Param{Data} );
    }
    else {
        $ReturnData = $Param{Data};
    }

    # az eredmény visszaadása
    return {
        Success => 1,
        Data    => $ReturnData,
    };
}
                ]]></programlisting>
            </para>
            <para>
                A <literal>Map</literal> függvény az egyes leképezőmodulok fő része. Fogadja
a leképezési beállításokat (szabályokat) és az eredeti formátumban lévő
adatokat (vagy az OTRS vagy a távoli rendszer formátumában lévőket), és
átalakítja azokat egy új formátumra még akkor is, ha az adatok szerkezete
megváltozhat a leképezési folyamat során.
            </para>
            <para>
                Ebben a bizonyos példában három szabály van az értékek leképezéséhez. Ezek a
szabályok a leképezési beállítások <literal>TestOption</literal> kulcsában
vannak beállítva, és a következők: <literal>ToUpper</literal>,
<literal>ToLower</literal> és <literal>Empty</literal>.
            </para>
            <itemizedlist mark="round">
                <listitem>
                    <para>
                        <literal>ToUpper</literal>: nagybetűsre alakít át minden egyes adatértéket.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>ToLower</literal>: kisbetűsre alakít át minden egyes adatértéket.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>Empty</literal>: egy üres szövegre alakít át minden egyes
adatértéket.
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                Ebben a példában nem lettek adatkulcs átalakítások megvalósítva.
            </para>
            <para>
                <programlisting><![CDATA[
sub _ToUpper {
    my ( $Self, %Param ) = @_;

    my $ReturnData = {};
    for my $Key ( sort keys %{ $Param{Data} } ) {
        $ReturnData->{$Key} = uc $Param{Data}->{$Key};
    }

    return $ReturnData;
}

sub _ToLower {
    my ( $Self, %Param ) = @_;

    my $ReturnData = {};
    for my $Key ( sort keys %{ $Param{Data} } ) {
        $ReturnData->{$Key} = lc $Param{Data}->{$Key};
    }

    return $ReturnData;
}

sub _Empty {
    my ( $Self, %Param ) = @_;

    my $ReturnData = {};
    for my $Key ( sort keys %{ $Param{Data} } ) {
        $ReturnData->{$Key} = '';
    }

    return $ReturnData;
}

                ]]></programlisting>
            </para>
            <para>
                Ezek azok a segédfüggvények, amelyek ténylegesen végrehajtják a
szövegátalakításokat.
            </para>
        </section>
        <section id="mapping-configuration">
            <title>Beállítási példa</title>
            <para>
                Szükség van ezen leképezőmodul regisztrálására, hogy elérhető legyen az OTRS
grafikus felhasználói felületén. Ezt a lenti XML beállítás használatával
lehet megtenni.
            </para>
            <para>
                <programlisting linenumbering="numbered"><![CDATA[
<ConfigItem Name="GenericInterface::Mapping::Module###Test" Required="0" Valid="1">
    <Description Translatable="1">GenericInterface module registration for the mapping layer.</Description>
    <Group>GenericInterface</Group>
    <SubGroup>GenericInterface::Mapping::ModuleRegistration</SubGroup>
    <Setting>
        <Hash>
            <Item Key="ConfigDialog"></Item>
        </Hash>
    </Setting>
</ConfigItem>
                ]]></programlisting>
            </para>
        </section>
    </section>
</section>
