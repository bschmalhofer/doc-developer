<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="dynamic-fields-extend-field-backend">
    <title>Dinamikus mező háttérprogram kiterjesztés példa</title>
    <para>
        A háttérprogram kiterjesztések átláthatóan lesznek betöltve magába a
háttérprogramba egy alaposztályként. A háttérprogramból az összes
meghatározott objektum és tulajdonság elérhető lesz a kiterjesztésben.
    </para>
    <note>
        <para>
            A háttérprogram kiterjesztésben meghatározott összes új függvényt meg kell
valósítani egy illesztőprogram kiterjesztésben.
        </para>
    </note>
    <section id="dynamic-fields-extend-field-backend-code">
        <title>Kódpélda:</title>
        <para>
            Ebben a szakaszban a háttérprogramhoz készített <literal>Foo</literal>
kiterjesztés van megjelenítve és elmagyarázva. A kiterjesztés csak a
<code>Foo()</code> függvényt határozza meg.
         </para>
         <para>
            <programlisting><![CDATA[
# --
# Kernel/System/DynamicField/FooExtensionBackend.pm - Extension for DynamicField backend
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

package Kernel::System::DynamicField::FooExtensionBackend;

use strict;
use warnings;

use Kernel::System::VariableCheck qw(:all);

=head1 NAME

Kernel::System::DynamicField::FooExtensionBackend

=head1 SYNOPSIS

DynamicFields Extension for Backend

=head1 PUBLIC INTERFACE

=over 4

=cut
            ]]></programlisting>
        </para>
        <para>
            Ez egy gyakori fejléc, amely megtalálható a szokásos OTRS modulokban. Az
osztály/csomag neve a <literal>package</literal> kulcsszón keresztül van
deklarálva.
        </para>
        <para>
            <programlisting><![CDATA[
=item Foo()

Tesztelő függvény: 1-et ad vissza, ha a függvény elérhető egy dinamikus mező illesztőprogramnál.

    my $Success = $BackendObject->Foo(
        DynamicFieldConfig   => $DynamicFieldConfig,      # a dinamikus mező teljes beállítása
    );

Returns:
    $Success = 1;       # vagy undef

=cut

sub Foo {
    my ( $Self, %Param ) = @_;

    # a szükséges dolgok ellenőrzése
    for my $Needed (qw(DynamicFieldConfig)) {
        if ( !$Param{$Needed} ) {
            $Kernel::OM->Get('Kernel::System::Log')->Log(
                Priority => 'error',
                Message  => "Szükséges: $Needed!",
            );

            return;
        }
    }

    # a DynamicFieldConfig ellenőrzése (általánosan)
    if ( !IsHashRefWithData( $Param{DynamicFieldConfig} ) ) {
        $Kernel::OM->Get('Kernel::System::Log')->Log(
            Priority => 'error',
            Message  => "A mező beállítása érvénytelen",
        );

        return;
    }

    # a DynamicFieldConfig ellenőrzése (belsőleg)
    for my $Needed (qw(ID FieldType ObjectType)) {
        if ( !$Param{DynamicFieldConfig}->{$Needed} ) {
            $Kernel::OM->Get('Kernel::System::Log')->Log(
                Priority => 'error',
                Message  => "$Needed szükséges ebben: DynamicFieldConfig!",
            );

            return;
        }
    }

    # a dinamikus mezőre jellemző háttérprogram beállítása
    my $DynamicFieldBackend = 'DynamicField' . $Param{DynamicFieldConfig}->{FieldType} . 'Object';

    if ( !$Self->{$DynamicFieldBackend} ) {
        $Kernel::OM->Get('Kernel::System::Log')->Log(
            Priority => 'error',
            Message  => "A háttérprogram érvénytelen: $Param{DynamicFieldConfig}->{FieldType}!",
        );

        return;
    }

    # annak ellenőrzése, hogy a függvény elérhető-e
    return if !$Self->{$DynamicFieldBackend}->can('Foo');

    # a HasBehavior meghívása az adott háttérprogramnál
    return $Self->{$DynamicFieldBackend}->Foo(%Param);
}
            ]]></programlisting>
        </para>
        <para>
            A <code>Foo()</code> függvényt kizárólag tesztelési célokra
használják. Először leellenőrzi a dinamikus mező beállításait, majd azt
ellenőrzi, hogy a dinamikus mező illesztőprogram (típus) létezik-e, és
betöltésre került-e. Annak megakadályozásához, hogy egy olyan
illesztőprogramnál történjen függvényhívás, ahol nincs meghatározva, először
azt ellenőrzi, hogy az illesztőprogram képes-e végrehajtani a függvényt,
majd végrehajtja a függvényt az illesztőprogramban az összes paramétert
átadva.
        </para>
        <note>
            <para>
                Lehetséges annak a lépésnek a kihagyása is, amely azt próbálja, hogy az
illesztőprogram képes-e végrehajtani a függvényt. Ennek elvégzéséhez
szükséges egy mechanizmus megvalósítása az előtétprogram modulban egy
különleges viselkedés megköveteléséhez a dinamikus mezőnél, és csak azután
hívja meg a függvényt a háttérprogram objektumban.
            </para>
        </note>
    </section>
</section>
