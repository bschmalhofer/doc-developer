<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="task-handler">
    <title>Feladatkezelő</title>
    <para>
        A feladatkezelő modulokat használják az OTRS-en belüli műveletek aszinkron
végrehajtásához az OTRS ütemezőn keresztül (egy különálló „démon szerű”
folyamat), amelyet kifejezetten az ilyen fajta feladatok végrehajtásához
készítettek.
    </para>
    <section id="adding_taskhandler">
        <title>Feladatkezelő háttérprogram</title>
        <para>
            Ezután be fogjuk mutatni, hogy hogyan kell egy új feladatkezelő
háttérprogramot kifejleszteni. Minden egyes feladatkezelő háttérprogramnak
meg kell valósítania ezeket a szubrutinokat:
        </para>
        <para>
            <itemizedlist mark="round">
                <listitem>
                    <para><literal>new</literal></para>
                </listitem>
                <listitem>
                    <para><literal>Run</literal></para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Meg kell valósítanunk ezen metódusok mindegyikét azért, hogy képesek legyünk
feladatokat végrehajtani. Az összes feladatkezelő háttérprogramot a fő
ütemező feladatkezelő modul használja
(<filename>Kernel/scheduler/TaskHandler.pm</filename>).
        </para>
        <para>
            Jelenleg az ütemezőnek csak egy működő feladatkezelő háttérprogramja van,
amelyet <literal>GenericInterface</literal> néven hívnak. Ez a feladatkezelő
háttérprogram hajtja végre az általános felület meghívó moduljait a
háttérben.
        </para>
        <para>
            <emphasis>Például:</emphasis>
        </para>
        <para>
            Az általános felülettel egyesített OTRS ütemező használatával egy
felhasználónak nem kell várnia az új telefonos jegy képernyőn egy jegy
létrehozása után, amíg egy távoli rendszer válaszol egy esemény (mint
például <literal>TicketCreate</literal>) által aktivált webszolgáltatás
kérésre, hanem ehelyett ez a feladat átadható az OTRS ütemezőnek, hogy
lefuttassa azt a háttérben.
        </para>
        <para>
            Nincs szükség egy új feladatkezelő háttérprogram létrehozására az általános
felülethez, hacsak egy eltérő viselkedés nem szükséges a jelenlegitől. Az
általános felület meghívó feladatoknak az OTRS ütemezőnek történő átadásához
aszinkron módon kell beállítania a meghívó eseményaktiválót.
        </para>
        <section id="taskhandler_code_example">
            <title>Kódpélda</title>
            <para>
                Ebben a szakaszban egy minta ütemező feladatkezelő modul lesz megjelenítve,
és minden szubrutin elmagyarázásra kerül.
            </para>
            <para>
                <programlisting><![CDATA[
# --
# Kernel/Scheduler/TaskHandler/Test.pm - Ütemező feladatkezelő teszt háttérprogram
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

package Kernel::Scheduler::TaskHandler::Test;

use strict;
use warnings;

use vars qw(@ISA);
                ]]></programlisting>
            </para>
            <para>
                Ez egy gyakori fejléc, amely megtalálható a szokásos OTRS modulokban. Az
osztály/csomag neve a <literal>package</literal> kulcsszón keresztül van
deklarálva.
            </para>
            <para>
                <programlisting><![CDATA[
sub new {
    my ( $Type, %Param ) = @_;

    my $Self = {};
    bless( $Self, $Type );

    # a szükséges objektumok ellenőrzése
    for my $Needed (qw(MainObject ConfigObject LogObject DBObject TimeObject)) {
        $Self->{$Needed} = $Param{$Needed} || die "Nincs $Needed!";
    }

    return $Self;
}
                ]]></programlisting>
            </para>
            <para>
                A <literal>new</literal> konstruktor hozza létre az osztály új példányát. A
kódolási irányelvek szerint más osztályoknak azon objektumait kell a
<literal>new</literal> konstruktorban létrehozni, amelyek ebben a modulban
szükségesek.
            </para>
            <para>
                <programlisting><![CDATA[
sub Run {
    my ( $Self, %Param ) = @_;

    # adatok ellenőrzése - szükségünk van egy kivonathivatkozásra
    if ( $Param{Data} && ref $Param{Data} ne 'HASH' ) {
        $Self->{LogObject}->Log(
            Priority => 'error',
            Message  => 'Nem érkezett érvényes adat!',
        );

        return {
            Success => 0,
        };
    }

    # átmeneti fájl létrehozása
    if ( $Param{Data}->{File} ) {
        my $Content = 123;
        return if !$Self->{MainObject}->FileWrite(
            Location => $Param{Data}->{File},
            Content  => \$Content,
        );
    }

    # újraütemezés az új idővel
    return {
        Success    => $Param{Data}->{Success},
        ReSchedule => $Param{Data}->{ReSchedule},
        DueTime    => $Param{Data}->{ReScheduleDueTime},
        Data       => $Param{Data}->{ReScheduleData},
    };
}
                ]]></programlisting>
            </para>
            <para>
                A <literal>Run</literal> függvény a modul fő része. Ellenőrzi a bejövő
adatokat, hívásokat indít más OTRS modulok felé a feladatok végrehajtásához,
várakozik a feladat eredményére, és az eredmény információi alapján
meghatározza, hogy a feladat végrehajtása sikeres volt-e vagy sem, valamint
ha a feladatnak újra kell ütemeznie magát, akkor azt mikor és milyen
adatokkal tegye meg.
            </para>
            <para>
                Ennél a tesztelési példánál ha a <literal>File</literal> paraméter létezik a
bejövő adatokban, akkor a feladatkezelőnek egy új fájlt kell létrehoznia a
fájlrendszeren. Ennek sikerétől függően a feladatkezelő folytatni fogja a
kód maradék részét, ahol a döntéseit a korábban szolgáltatott adatokra
alapozza a visszaadott szerkezetnél.
            </para>
            <para>
                A valódi feladatkezelő háttérprogramoknál a döntések a visszaadott
szerkezetnél alapulhatnak a feladatkezelő háttérprogram logikáján, a
feladatvégrehajtás eredményein, a konfigurációs beállításokon, stb.
            </para>
            <para>
                <programlisting><![CDATA[
1;

=back
                ]]></programlisting>
            </para>
        </section>
    </section>
</section>
